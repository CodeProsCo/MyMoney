@using Cassette.Scripts
@using Cassette.Stylesheets
@using Cassette.Views
@using MyMoney.Resources
@model MyMoney.ViewModels.Saving.Goal.ManageGoalsViewModel
@{
    ViewBag.Title = Goal.Title_ManageGoals;

    Bundles.Reference<StylesheetBundle>("~/Areas/Saving/Content/Goal/goal.css");
    Bundles.Reference<ScriptBundle>("~/Areas/Saving/Scripts/Goal/MyMoney.ManageGoals.js");
}

<div class="ui grid" id="main-grid">
    <div class="twelve wide column">
        <div class="ui styled segment">
            <h4 class="ui block header">
                <i class="flag icon"></i>
                @Goal.Header_CurrentGoals
            </h4>
            <div class="ui divided items">
                @foreach (var goal in Model.Goals.Where(x => !x.Complete))
                {
                    <div class="item" data-goal-id="@goal.Id">
                        <div class="content">
                            <span class="header">@goal.Name</span>
                            <div class="ui right floated yellow icon button"
                                 data-inverted
                                 data-tooltip="@Goal.Tooltip_Edit"
                                 data-edit
                                 data-get="@Url.Action("Get", "Goal", new {goalId = goal.Id})">
                                <i class="pencil icon"></i>
                            </div>
                            <div class="meta">
                                @goal.StartDate.ToShortDateString()

                                @if (goal.EndDate.HasValue)
                                {
                                    @("- ")
                                    @goal.EndDate.Value.ToShortDateString()
                                }
                            </div>
                            <div class="description">
                                <div class="ui indicating progress" data-percent="@goal.Amount">
                                    <div class="bar">
                                        <div class="progress"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                @if (Model.Goals.All(x => x.Complete))
                {
                    <span>
                        You have no current goals
                    </span>
                }
            </div>
        </div>
        <div class="ui styled segment">
            <h4 class="ui block header">
                <i class="check icon"></i>
                @Goal.Header_CompletedGoals
            </h4>
            <div class="ui divided items">
                @foreach (var goal in Model.Goals.Where(x => x.Complete))
                {
                    <div class="item">
                        <div class="content">
                            <span class="header">@goal.Name</span>
                            <div class="meta">
                                @goal.StartDate.ToShortDateString()

                                @if (goal.EndDate.HasValue)
                                {
                                    @("- ")
                                    @goal.EndDate.Value.ToShortDateString()
                                }
                            </div>
                            <div class="description">
                                <div class="ui progress success" data-percent="100">
                                    <div class="bar">
                                        <div class="progress"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="four wide column">
        <div class="ui styled segment">
            <h4 class="ui block header">
                <i class="flag outline icon"></i>
                @Goal.Header_YourGoals
            </h4>
            <div class="ui green button wide-button" id="add">
                <i class="add icon"></i>
                Create a New Goal
            </div>
        </div>
    </div>
</div>

@section Modals{
    @{
        Html.RenderPartial("Modals/_EditGoalModal", Model.EditGoal);
        Html.RenderPartial("Modals/_AddGoalModal", Model.AddGoal);
    }
}
